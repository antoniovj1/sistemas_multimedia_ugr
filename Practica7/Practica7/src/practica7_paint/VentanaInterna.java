/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica7_paint;

import java.awt.Color;
import sm.avj.ui.Lienzo;

/**
 *
 * @author antoniovj1
 */
public class VentanaInterna extends javax.swing.JInternalFrame {

    private final VentanaPrincipal ventanaPadre;

    public VentanaInterna(VentanaPrincipal ventanaPadre) {
        this.ventanaPadre = ventanaPadre;
        initComponents();
    }

    public Lienzo getLienzo() {
        return lienzo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzo = new sm.avj.ui.Lienzo();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Lienzo");
        setPreferredSize(new java.awt.Dimension(250, 250));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lienzo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lienzoMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lienzoMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );

        getContentPane().add(lienzo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        this.ventanaPadre.botonRelleno.setSelected(lienzo.isRelleno());
        this.ventanaPadre.botonAlisar.setSelected(lienzo.isAlisado());
        this.ventanaPadre.botonEditar.setSelected(lienzo.isEditar());
        this.ventanaPadre.botonTransparencia.setSelected(lienzo.isTransparencia());
        this.ventanaPadre.spinnerGrosor.setValue(lienzo.getStrokeWidth().intValue());

        switch (lienzo.getForma()) {
            case PUNTO:
                this.ventanaPadre.botonPunto.setSelected(true);
                break;
            case ELIPSE:
                this.ventanaPadre.botonElipse.setSelected(true);
                break;
            case RECTANGULO:
                this.ventanaPadre.botonRectangulo.setSelected(true);
                break;
            case LINEA:
                this.ventanaPadre.botonLinea.setSelected(true);
                break;
        }

        if (lienzo.getColor().getRGB() == Color.BLACK.getRGB()) {
            this.ventanaPadre.bColor1.setSelected(true);
        } else if (lienzo.getColor().getRGB() == Color.GREEN.getRGB()) {
            this.ventanaPadre.bColor2.setSelected(true);
        } else if (lienzo.getColor().getRGB() == Color.BLUE.getRGB()) {
            this.ventanaPadre.bColor3.setSelected(true);
        } else if (lienzo.getColor().getRGB() == Color.WHITE.getRGB()) {
            this.ventanaPadre.bColor4.setSelected(true);
        } else if (lienzo.getColor().getRGB() == Color.YELLOW.getRGB()) {
            this.ventanaPadre.bColor5.setSelected(true);
        } else if (lienzo.getColor().getRGB() == Color.RED.getRGB()) {
            this.ventanaPadre.bColor6.setSelected(true);
        }

        repaint();

    }//GEN-LAST:event_formInternalFrameActivated

    private void lienzoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzoMouseMoved
        String pos = "X: " + evt.getX() + " Y: " + evt.getY();
        this.ventanaPadre.barraEstado.setText(pos);
    }//GEN-LAST:event_lienzoMouseMoved

    private void lienzoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzoMouseDragged
        String pos = "X: " + evt.getX() + " Y: " + evt.getY();
        this.ventanaPadre.barraEstado.setText(pos);
    }//GEN-LAST:event_lienzoMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private sm.avj.ui.Lienzo lienzo;
    // End of variables declaration//GEN-END:variables

}
